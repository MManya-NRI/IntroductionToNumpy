{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOIU/3ZNjFhmwdJ/nF2b0jS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"aOmnwB2dugLV"},"outputs":[],"source":["# Numpy - Numeric Python\n","# Most powerful package-Library\n","# Numpy - Dimensions\n","# A - One Dimensional Array\n","# [A,B] [] [A\n","#            B]- Two Dimensional Array\n","# Three Dimensional\n","# Array - storing, manipulation, similar data type\n","# Faster than any mathematical functions\n","# Convenient compared to other packages\n","# Memory efficiency\n","# Support multi Dimensional arrays\n","# speed(Numpy operations) > speed (Lists operations)\n","#"]},{"cell_type":"code","source":["# install numpy - pip3 install numpy // pip install numpy"],"metadata":{"id":"Kr4tPewJv1wl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"i0giUQ-mwFbH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a numpy array\n","# 1D array\n","arr1D = np.array([1,2,3,4,])\n","print(arr1D)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RTdfCfhBwIfy","executionInfo":{"status":"ok","timestamp":1740028182914,"user_tz":-330,"elapsed":55,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"86a98d09-f418-4d7c-8906-5686277e144b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n"]}]},{"cell_type":"code","source":["# Creating 2D array - Matrix\n","arr2D = np.array([\n","      [1,2,3],[4,5,6]\n","])\n","print(arr2D)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YMYibgmuwwn2","executionInfo":{"status":"ok","timestamp":1740028750487,"user_tz":-330,"elapsed":18,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"8f8d5160-78f2-46b4-f2b2-a605889488a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]]\n"]}]},{"cell_type":"code","source":["# Creating arrays with default values\n","altZeros = np.zeros([2,3])\n","print(altZeros)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nRONr23qynci","executionInfo":{"status":"ok","timestamp":1740028885729,"user_tz":-330,"elapsed":19,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"5c07714c-5268-415e-aa85-0ba24a759632"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0.]\n"," [0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["# Creating matrix with all values of elements as '0'\n","altZeros = np.zeros([2,3])\n","print(altZeros)\n","\n","# Creating matrix with all values of elements as '1'\n","altOnes = np.ones([2,3])\n","print(altOnes)\n","\n","# Creating matrix with all values of elements 'constant value-n ~ full value'\n","altConstant = np.full((2,3),6)\n","print(altConstant)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mgLE4kQ4zhin","executionInfo":{"status":"ok","timestamp":1740029713579,"user_tz":-330,"elapsed":32,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"b36d167e-04de-4e7d-a8f2-ede22fbaa72b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0.]\n"," [0. 0. 0.]]\n","[[1. 1. 1.]\n"," [1. 1. 1.]]\n","[[6 6 6]\n"," [6 6 6]]\n"]}]},{"cell_type":"code","source":["# Create an identity matrix\n","identity = np.eye(4)\n","print(identity)\n","\n","# Identity Matrix - All = 1 && Aij = 0\n","# For all A Belongs R M×N\n","# Aij -"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"scWSaBOU0qzw","executionInfo":{"status":"ok","timestamp":1740029876688,"user_tz":-330,"elapsed":35,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"08b3f6fa-28a0-460e-9489-3db71aaa7c70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 0. 0. 0.]\n"," [0. 1. 0. 0.]\n"," [0. 0. 1. 0.]\n"," [0. 0. 0. 1.]]\n"]}]},{"cell_type":"code","source":["# Creating random Matrices\n","\n","# with 0 and 1\n","rand1 =np.random.rand(3,3)\n","print(rand1)\n","\n","# between a and b\n","rand2 = np.random.randint(10,20,(3,3))\n","print(rand2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"do-8NeEj3mwq","executionInfo":{"status":"ok","timestamp":1740030145246,"user_tz":-330,"elapsed":28,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"0746bc65-c01f-4c3b-91bc-42ae144ebe18"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.23162108 0.72127795 0.0392488 ]\n"," [0.26248567 0.7237226  0.81617156]\n"," [0.34702099 0.81240431 0.72753244]]\n","[[19 14 12]\n"," [10 10 19]\n"," [13 10 16]]\n"]}]},{"cell_type":"code","source":["# Array Properties\n","arr = np.array([[1,2,3,4],[3,4,5,6]])\n","print(arr)\n","#shape,size,Datatype,dimensions of the Array\n","print(f'The Size of the array is {arr.size}')\n","\n","print(f'The Datatype of the array is {arr.dtype}')\n","print (f'The Shape of the array is {arr.shape}')\n","print(f'The dimensions of the array is {arr.ndim}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AEe0lbNr7kFb","executionInfo":{"status":"ok","timestamp":1740031228000,"user_tz":-330,"elapsed":43,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"247241c8-d8de-4856-b243-5e3452ee9032"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3 4]\n"," [3 4 5 6]]\n","The Size of the array is 8\n","The Datatype of the array is int64\n","The Shape of the array is (2, 4)\n","The dimensions of the array is 2\n"]}]},{"cell_type":"code","source":["# Indexing and Slicing\n","# Access the elements in 1D Array\n","arr = np.array([1,2,3,4])\n","print(arr)\n","print(arr[3])\n","\n","# Slicing the elements\n","print(arr[0:3])\n","\n","# Access the elements in 2D array\n","arr2 = np.array([[1,2,3],[4,5,6]])\n","print(arr2)\n","print(arr2[1,1])\n","print(arr2[0,:]) # first row with all columns\n","print(arr2[:,0]) # first column with all the rows"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Px1GfQht8dyW","executionInfo":{"status":"ok","timestamp":1740031729786,"user_tz":-330,"elapsed":17,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"24290044-9c6f-401b-c2ac-b9c9f89768f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n","4\n","[1 2 3]\n","[[1 2 3]\n"," [4 5 6]]\n","5\n","[1 2 3]\n","[1 4]\n"]}]},{"cell_type":"code","source":["# l1 = []\n","# [l1.append(_) for _ in range(10)]\n","\n","l1 = np.arange(10,-10,-3)\n","print(l1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n2Hzs3DUB6dj","executionInfo":{"status":"ok","timestamp":1740032689494,"user_tz":-330,"elapsed":25,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"6309db0e-9e87-4893-a1b7-4a3cb0861d13"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[10  7  4  1 -2 -5 -8]\n"]}]},{"cell_type":"code","source":["# Mathematical operations\n","a = np.array([1,2,3])\n","b = np.array([3,4,5])\n","print(f'The sum of a and b is {a + b}')\n","print(f'The sum of a and b is {a / b}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oFudkGMyCBoL","executionInfo":{"status":"ok","timestamp":1740032907230,"user_tz":-330,"elapsed":76,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"bc9e2b25-1db0-429d-c012-b79712f1d39c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The sum of a and b is [4 6 8]\n","The sum of a and b is [0.33333333 0.5        0.6       ]\n"]}]},{"cell_type":"code","source":["# Matrix multiplication\n","b1 = np.array([[1,2,3],[2,3,4]])\n","b2 = np.array([[5,6],[7,8],[1,3]])\n","\n","#Dot product --- product = AB -- A m × n --- n × p\n","c = np.dot(b1,b2)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z5rQJcmkC1g0","executionInfo":{"status":"ok","timestamp":1740033354897,"user_tz":-330,"elapsed":60,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"93db522b-04c1-4af1-8230-70c9a7a16dd3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[22 31]\n"," [35 48]]\n"]}]},{"cell_type":"code","source":["print(b1)"],"metadata":{"id":"B_XvBoC2GZ_V","executionInfo":{"status":"ok","timestamp":1740033866017,"user_tz":-330,"elapsed":72,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"a598d635-71c5-4ada-d8d7-70311d2d2dd2","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [2 3 4]]\n"]}]},{"cell_type":"code","source":["print(b2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jgK4OXC4EvZy","executionInfo":{"status":"ok","timestamp":1740033438882,"user_tz":-330,"elapsed":24,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"31840e41-eaeb-4523-f198-2d01d6890b70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 6]\n"," [7 8]\n"," [1 3]]\n"]}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"Hni17MmA9eFV","executionInfo":{"status":"ok","timestamp":1740115449254,"user_tz":-330,"elapsed":31,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["# Create numpy array\n","arr = np.array ([[1,2,3],[4,5,6]])"],"metadata":{"id":"Xm7zmxfE9p5e","executionInfo":{"status":"ok","timestamp":1740115464848,"user_tz":-330,"elapsed":11,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["type(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fHVxeh549tG9","executionInfo":{"status":"ok","timestamp":1740115470915,"user_tz":-330,"elapsed":47,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"55ba8ada-3e3d-46bf-9d8e-bda3a65c6f8f"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["arr.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lIhLo14g9vA5","executionInfo":{"status":"ok","timestamp":1740115484963,"user_tz":-330,"elapsed":15,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"031bb638-7553-4612-8c87-fe4565a171bf"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 3)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# dot product - m × n || n × p\n","arr1 = np.eye"],"metadata":{"id":"_fcf6fLw9yYo","executionInfo":{"status":"ok","timestamp":1740115490407,"user_tz":-330,"elapsed":17,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["t1 = np.random.randint(3,6,(3,3))\n","t2 = np.random.randint(3,6,(3,3))\n","print (t1)\n","print (t2)\n","t3 = t1 + t2\n","print(t3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9eUzGgTv92tv","executionInfo":{"status":"ok","timestamp":1740115506133,"user_tz":-330,"elapsed":65,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"c6edeaa0-f5cc-41a6-a839-3c16a7591485"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4 3 5]\n"," [5 4 4]\n"," [4 3 3]]\n","[[5 3 4]\n"," [3 3 4]\n"," [5 3 5]]\n","[[9 6 9]\n"," [8 7 8]\n"," [9 6 8]]\n"]}]},{"cell_type":"code","source":["#statistical operations\n","mean = t3.mean()\n","mode = t3.max()\n","print(mean)\n","print(mode)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rBVeaOKJ-IUq","executionInfo":{"status":"ok","timestamp":1740115578479,"user_tz":-330,"elapsed":55,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"8d6dc064-9e64-4dbc-812a-ded5281d9d60"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["7.777777777777778\n","9\n"]}]},{"cell_type":"code","source":["mean = t3.mean()\n","max = t3.max()\n","median = np.median(t3)\n","std = np.std(t3)\n","var = np.var(t3)"],"metadata":{"id":"aw-dlwAq-fMI","executionInfo":{"status":"ok","timestamp":1740115764439,"user_tz":-330,"elapsed":11,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["print(mean)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OHhS1tM6-2s_","executionInfo":{"status":"ok","timestamp":1740115786109,"user_tz":-330,"elapsed":51,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"068f3b07-5c97-40bb-d041-355c80a8beb3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["7.777777777777778\n"]}]},{"cell_type":"code","source":["print(max)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o2QA1o3S-74-","executionInfo":{"status":"ok","timestamp":1740115795818,"user_tz":-330,"elapsed":84,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"6073c607-9c2f-4347-8c86-ef0a83bc73c5"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["9\n"]}]},{"cell_type":"code","source":["print(median)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wiAqlJl0--Ow","executionInfo":{"status":"ok","timestamp":1740115806387,"user_tz":-330,"elapsed":13,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"3850d1a9-eaa5-4a85-d36f-ce7c7ce1767a"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["8.0\n"]}]},{"cell_type":"code","source":["print(var)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oEWhjLw2_A3w","executionInfo":{"status":"ok","timestamp":1740115815139,"user_tz":-330,"elapsed":46,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"763cfbf4-14f0-415b-a3dd-eff8ce3b7695"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["1.2839506172839508\n"]}]},{"cell_type":"code","source":["print(std)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4y3ZuXg9_LXg","executionInfo":{"status":"ok","timestamp":1740115859064,"user_tz":-330,"elapsed":49,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"43ff78b4-faaf-4de6-815d-dd990a8f3ec4"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["1.1331154474650633\n"]}]},{"cell_type":"code","source":["# Trignometric Equations\n","# sin(x)\n","# cos(x)\n","# Tan(x)\n","#Costco\n","#cot\n","#sec\n","\n","angles = np.array([0,15,30,45,60,75,90])\n","\n","# sin (array)\n","\n","result = np.sin(np.radians(angles))\n","result1 = np.cos(np.radians(angles))\n","result2 = np.tan(np.radians(angles))\n","print(result)\n","print(result1)\n","print(result2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYnoZLvM_Nw-","executionInfo":{"status":"ok","timestamp":1740116290197,"user_tz":-330,"elapsed":128,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"8cd4fa61-5764-42c6-ed6a-3054b9914ad3"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.         0.25881905 0.5        0.70710678 0.8660254  0.96592583\n"," 1.        ]\n","[1.00000000e+00 9.65925826e-01 8.66025404e-01 7.07106781e-01\n"," 5.00000000e-01 2.58819045e-01 6.12323400e-17]\n","[0.00000000e+00 2.67949192e-01 5.77350269e-01 1.00000000e+00\n"," 1.73205081e+00 3.73205081e+00 1.63312394e+16]\n"]}]},{"cell_type":"code","source":["arr = np.array([1,2,3,4,5,6])\n","\n","#reshape the array\n","reshapedarr = arr.reshape(3,2)\n","print(reshapedarr)\n","\n","# convert / flatten any n Dimensional Array\n","flattendarr = arr.flatten()\n","print(flattendarr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LW5MmiuyA9b5","executionInfo":{"status":"ok","timestamp":1740116616710,"user_tz":-330,"elapsed":13,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"ce15c36a-c5a7-4f59-ec2e-e4537e380937"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]\n"," [5 6]]\n","[1 2 3 4 5 6]\n"]}]},{"cell_type":"code","source":["#stacking data\n","arr1 = np.array([1,2,3,4])\n","arr2 = np.array([10,20,30,40])\n","arr3 = np.vstack((arr1,arr2))\n","print(arr3)\n","print(arr3.shape)\n","print(np.hstack((arr1,arr2)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DC7wKpZdF42c","executionInfo":{"status":"ok","timestamp":1740117612479,"user_tz":-330,"elapsed":15,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"44adf340-6dc1-4ae3-e0e4-d7d7add3aa7f"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3  4]\n"," [10 20 30 40]]\n","(2, 4)\n","[ 1  2  3  4 10 20 30 40]\n"]}]},{"cell_type":"code","source":["# Filtering\n","arr = np.array([20,30,40,50,60,70,80])\n","farr = arr[arr>40]\n","print(farr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8kABEQr5Gz6b","executionInfo":{"status":"ok","timestamp":1740117934998,"user_tz":-330,"elapsed":103,"user":{"displayName":"Manya Meduri","userId":"12830811050335147631"}},"outputId":"5c9f7d1a-b61a-4519-a180-4777d4d65a7e"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["[50 60 70 80]\n"]}]}]}